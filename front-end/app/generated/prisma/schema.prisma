// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../app/generated/prisma"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["arch_games"]
}

model team {
  id           Int           @id @default(autoincrement())
  name         String        @unique @db.VarChar(100)
  participants participant[]
  activities   activity[]

  @@schema("arch_games")
}

model activity {
  id                   String               @id @default(uuid())
  participant          String
  team                 String
  team_id              Int?
  participant_id       String?
  date                 DateTime
  type                 String
  category             String
  base_score           Float                @default(0)
  multiplier           Float                @default(1.0)
  calculated_score     Float                @default(0)
  key_process          String
  activity             Json
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  team_relation        team?                @relation(fields: [team_id], references: [id])
  participant_relation participant?         @relation(fields: [participant_id], references: [id])
  scoreChanges         ScoreChangeHistory[]

  @@index([participant])
  @@index([team])
  @@index([category])
  @@index([key_process])
  @@index([team_id])
  @@index([participant_id])
  @@schema("arch_games")
}

model image {
  id            Int      @id @default(autoincrement())
  key_process   String
  hash          String   @unique @db.VarChar(64)
  name          String   @db.VarChar(255)
  team          String   @db.VarChar(100)
  type          String   @db.VarChar(50)
  activity_date DateTime
  upload_date   DateTime @default(now())
  filename      String   @db.Text

  @@index([hash])
  @@map("image")
  @@schema("arch_games")
}

model participant {
  id         String     @id @default(uuid())
  name       String     @db.VarChar(100)
  email      String     @unique @db.VarChar(100)
  type       String     @db.VarChar(20) // participant, captain, governance
  team_id    Int
  team       team       @relation(fields: [team_id], references: [id])
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  activities activity[]

  @@index([team_id])
  @@schema("arch_games")
}

model ScoreChangeHistory {
  id             String   @id @default(cuid())
  activity       activity @relation(fields: [activity_id], references: [id])
  activity_id    String
  old_base_score Float
  old_multiplier Float
  new_base_score Float
  new_multiplier Float
  change_reason  String
  changed_at     DateTime
  createdAt      DateTime @default(now())

  @@index([activity_id])
  @@schema("arch_games")
}
